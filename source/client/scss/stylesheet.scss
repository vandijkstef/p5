@font-face {
	font-family: Nexa;
	src: url('/NexaRegular.woff2');
}

@font-face {
	font-family: NexaXBold;
	src: url('/NexaXBold.woff2');
}

$maincolor: #4ed967;
$maincolor-lighter: #7EFE94;
$maincolor-light: #84F498;
$maincolor-darker: #2CA241;
$maincolor-dark: #386740;

$blue: #362f90;
$blue-lighter: #574BEC;
$blue-light: #5C54BF;
$blue-darker: #171347;
$blue-dark: #131227;

$pink: #EE3869;
$pink-lighter: #FE5E89;
$pink-light: #F9678E;
$pink-darker: #B31942;
$pink-dark: #702C3E;

$grey: #F3E5D8;
$grey-lighter: #FFF2E6;
$grey-light: #FFFDFB;
$grey-darker: #A09182;
$grey-dark: #767471;

$white: rgba(255, 255, 255, .9);
$white-light: rgba(255, 255, 255, .75);
$black: #231F20;
$black-darker: #0B0607;
$black-dark: #000000;

$trans: .2s;
$commonRadius: .4rem;

$tablet: 50em;
$desktop: 70em;

@mixin padding {
	padding: .75rem 1rem;
	@media (min-width: $tablet) {
		padding: 1.25rem 1.5rem;
	}
	@media (min-width: $desktop) {
		padding: 1.75rem 2rem;
	}
}

@mixin radius {
	border-radius: $commonRadius;
}

@mixin shadow {
	box-shadow: 0 0.3125em 0.625em 0 rgba(0,0,0,.15);
}

.hidden {
	display: none !important;
}

main {
	position: relative;
	z-index: 95;
}

main article {
	display: grid;
	margin: 0 auto;
	grid-gap: 1rem;
	grid-row-gap: 2rem;
	@media (min-width: $tablet) { 
		grid-template-columns: 1fr 1fr;
	}
	@media (min-width: $desktop) {
		grid-template-columns: 1fr 1fr 1fr;
		max-width: $desktop;
	}
	// @media (min-width: 90em) {
	// 	grid-template-columns: 1fr 1fr 1fr 1fr;
	// 	max-width: 90em;
	// }
}

main > section {
	@include padding;
	// padding: 0;
	@media (min-width: $tablet) {
		padding-top: 1.5rem;
		padding-bottom: 1.5rem;
	}
	position: relative;
	z-index: 90;
	// @media (min-width: $desktop) {
	// 	max-width: $desktop;
	// 	margin: 0 auto;
	// }
	&:nth-of-type(2n - 1) {
		background-color: rgba(255, 255, 255, .8);
	}
	h2 {
		margin-bottom: .6rem;
	}
}

h1, h2, h3, h4, h5, h6, p, li, a, label, input, button {
	font-size: 1em;
	font-family: Nexa, sans-serif;
	&.price {
		font-size: 1.5em;
		color: $blue;
	}
}

p {
	font-size: 1.2em;
	line-height: 1.4em;
}

h1, h2, h3, h4, h5 {
	color: $maincolor;
	max-width: 70rem;
	margin: 0 auto;
	font-family: NexaXBold, sans-serif;
	font-weight: bold;
}

h1, h2 {
	font-size: 2.375em;
}

h3, h4, h5 {
	font-size: 1.25em;
}

p {
	color: $black;
}
 
@mixin createButtonStyle($className, $background, $text) {
	@if ($className == 'default') {
		@include _buttonStyle($background, $text);
	} @else {
		&.#{$className} {
			@include _buttonStyle($background, $text);
		}
	}
}
@mixin _buttonStyle($background, $text) {
	background-color: $background;
	color: $text;
	border-color: $background;
	&:hover:not(:disabled), &:focus:not(:disabled) {
		background-color: lighten($background, 10);
		color: $text;
		border-color: lighten($background, 10);
		border-bottom-color: $background;
	}
	&:focus:not(:disabled) {
		text-decoration: underline;
		outline-color: $background;
	}
	&.inv {
		background-color: $text;
		color: $background;
		border-color: $text;
		&:hover:not(:disabled), &:focus:not(:disabled) {
			background-color: $text;
			color: lighten($background, 10);
			border-color: $text;
		}
	}
	&.hoverinv {
		&:hover:not(:disabled), &:focus:not(:disabled) {
			background-color: $text;
			color: $background;
			border-color: $text;
		}
	}
}

a.button, button, input[type=submit], .btn {
	// Defaults
	@include radius;
	padding: .3rem 2rem;
	// font-weight: 800;
	font-size: 1.1em;
	transition: $trans * 1.5;
	text-decoration: none;
	text-align: center;
	border: none;
	cursor: pointer;
	display: inline-block;
	&:not(.default) {
		// border: solid; // Width is defined in the _buttonStyle()
		&:hover:not(:disabled), &:focus:not(:disabled) {
			transition: $trans / 2;
			// TODO: Extra funky focus thingy
		}
		&:disabled {
			background-color: $grey;
			cursor: not-allowed;
		}
		@include createButtonStyle('default', $blue, $white);
		// Other button styles
		@include createButtonStyle('action', $maincolor, $maincolor-dark);
		@include createButtonStyle('active', $pink, $white);
		@include createButtonStyle('error', red, $white);
		@include createButtonStyle('disabled', $grey, $white);
		@include createButtonStyle('subtle', $grey-darker, $grey-lighter);
		&.disabled {
			cursor: not-allowed;
		}
	}
}


body {
	position: relative;
	padding-top: 4.5rem;
	margin: 0;
	transition: background-color 1s;
	max-width: 100vw;
	overflow-x: hidden;
	& > header {
		background-color: $white;
		@media (min-width: $tablet) {
			background-color: red;
			testcase: tablet;
		}
		@media (min-width: $desktop) {
			background-color: green;
			testcase: desktop;
		}
		position: fixed;
		z-index: 99;
		top: 0;
		display: flex;
		justify-content: space-between;
		align-items: center;
		width: 100%;
		@include shadow;
		padding: 0;
		h1 {
			margin: 1.2rem .6rem 0 0;
		}
		#logo {
			padding-left: 1rem;
			flex-grow: 2;
			position: relative;
			display: flex;
			align-items: center;
			svg {
				position: relative;
				bottom: -.8rem;
			}
		}
		a {
			position: relative;
			margin-right: 1em;
		}
		ul {
			padding: 0;
			margin: 0;
			display: flex;
			list-style: none;
		}
	}
}

.imaged {
	position: relative;
	overflow: hidden;
	img {
		position: absolute;
		z-index: -10;
		top: 23%;
		left: 50%;
		transform: translate(-50%, -25%);
		min-width: 130vw;
		height: 100vh;
	}
}

#explain {
	@media (min-width: $tablet) {
		padding-top: 4em;
		padding-bottom: 4em;
		height: calc(100vh - 12.5em);
	}
	& > section {
		display: grid;
		grid-template-columns: 25em;
		max-width: 50em;
		margin: 0 auto;
		& > div {
			@include padding;
			border-radius: $commonRadius;
			background-color: $white-light;
			width: 31em;
			max-width: 100vw;
			@media (max-width: $tablet) {
				p {
					padding-right: .75em;
				}
			}
		}
	}
}

#hero {
	position: relative;
	width: 100vw;
	padding-top: 56.25%;
	margin-top: -.2rem;
	&.rendered {
		p {
			display: block;
		}
	}
	section {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 200px;
		height: 200px;
		position: absolute;
		border-radius: 100%;
		transform: translate(-50%, -50%);
		transition: 1s;
		color: rgba(255, 255, 255, 0);
		overflow: hidden;
		cursor: pointer;
		@include shadow;
		&:hover {
			width: 350px;
			height: 350px;
			z-index: 60;
			box-shadow: 0 0.625em 1.25em 0 rgba(0,0,0,.15);
			h2 {
				font-size: 3.2em;
			}
			img {
				opacity: .9;
			}
		}
		&.active {
			width: 7000px;
			height: 7000px;
			z-index: 70;
			cursor: unset;
			box-shadow: unset;
			h2 {
				font-size: 4.5em;
			}
			img {
				opacity: 1;
				mask-image: linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,0));
				-webkit-mask-image: linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,0));
			}
			div {
				@include padding;
				@include radius;
				@include shadow;
				max-width: 30em;
				background-color: rgba(255, 255, 255, .9);
				p {
					max-width: 25em;
				}
			}
		}
		h2 {
			// mix-blend-mode: color-dodge;
			transition: font-size 1s;
		}
		p {
			display: none;
		}
		img {
			position: absolute;
			z-index: -99;
			width: 140vw;
			transition: 1s;
			opacity: .7;
			transform: translateX(-20vw);
			mask-image: linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,1));
			-webkit-mask-image: linear-gradient(to bottom, rgba(0,0,0,1), rgba(0,0,0,1));
		}
	}
}

@mixin season($name, $background) {
	body##{$name} {
		background-color: rgba($background, .5);
		#hero > section:not(##{$name}) {
			opacity: 0;
		}
		// h1, h2, h3, h4, h5, h6 {
		// 	color: #{$main}
		// }
	}
}

@include season('winter', #add8e6);
@include season('weekend', #ffdab9);
@include season('summer', #f0e68c);

.vPanel {
	position: fixed;
	z-index: 999;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background-color: rgba(0, 0, 0, .7);
	display: flex;
	justify-content: center;
	align-items: center;
	animation: fadeIn $trans * 2 ease-out;
	&.disabled {
		display: none;
	}
	& > div {
		@include radius;
		background-color: white;
		padding: 1rem;
		animation: fadeInDelay $trans * 2 ease-out;
		max-width: $tablet;
		width: 100%;
		margin: 0 1rem;
		min-height: 50vh;
		max-height: 100vh;
		justify-content: center;
		display: flex;
		flex-direction: column;
		& > * {
			max-width: 15rem;
			margin: 0 auto 1rem;
		}
		button {
			display: block;
			position: relative;
			right: -5.3rem;
			margin-bottom: 0;
			margin-top: 2rem;
		}
		input {
			margin-top: .6rem;
			margin-bottom: 1.2rem;
		}
	}
}

label {
	font-weight: normal;
	display: flex;
	flex-direction: column;
	font-size: 1.2em;
	cursor: pointer;
	&.inline {
		flex-direction: row;
		align-items: center;
	}
	input:not([type=submit]), textarea {
		font-size: 1em;
		margin: 0;
		margin-bottom: .6rem;
	}
	input[type=radio], input[type=checkbox] {
		margin-right: .5em;
		margin-bottom: 0;
		order: -1;
	}
}
input:not([type=submit]), textarea, select {
	@include radius;
	padding: 0.5em .6em;
	font-size: 1.2em;
	border: .13rem solid $grey;
	background-color: rgba($grey, .05);
	max-width: 100%;
	margin-bottom: 1em;
	display: block;
	transition: $trans * 2;
	&:hover, &:focus {
		border-color: $maincolor-darker;
		outline: none;
	}
	&.missing {
		border: 1px solid red;
	}
	&:invalid {
		border-color: red;
		background-color: rgba(red, .05);
		&:hover, &:focus {
			border-color: darken(red, 25);
		}
	}
	&:placeholder-shown {
		border-color: rgba($maincolor, .1);
		background-color: rgba($maincolor, .05);
		&:hover, &:focus {
			border-color: rgba($maincolor, .3);
		}
		&:required:not(:disabled) {
			border-color: $maincolor;
			&:hover, &:focus {
				border-color: darken($maincolor, 18);
			}
		}
	}
	&:valid:not(:placeholder-shown) {
		border-color: $maincolor;
		background-color: rgba($maincolor-lighter, .15);
		&:hover, &:focus {
			border-color: darken($maincolor-darker, 5);
		}
	}
	&:disabled {
		border-color: $grey;
		background-color: $grey;
		&:hover, &:focus {
			border-color: $grey;
		}
	}
}
input[type=radio], input[type=checkbox] {
	display: inline;
	margin: 0 1rem 0 0;
	// TODO: Radio buttons
	+ label {
		display: inline;
	}
}
textarea {
	min-height: 8em;
	+ .notice {
		margin-top: 0;
		color: $grey;
	}
}
select {
	border-color: green;
	background-color: rgba(green, .05);
}

legend {
	float: left;
	font-size: 1.2em;
	margin-left: -.1em;
	margin-bottom: .8em;
	margin-top: .2em;
	width: 100%;
}

fieldset {
	@include radius;
	border: 0;
	border: 1px solid rgba($maincolor, .1);
	padding: .8rem 1rem;
	margin: 0;
	margin-bottom: .6rem;
	&:valid {
		background-color: rgba(green, .05);
		& & {
			background-color: unset;
		}
	}
	& & {
		margin: -1em 0 1em;
		legend {
			font-size: 1.2em;
		}
	}
}

.slide {
	display: flex;
	overflow-x: scroll;
	scrollbar-width: none;
	grid-gap: 2rem;
	position: relative;
	border-radius: $commonRadius * 3;
	&.vertical {
		flex-direction: column;
		overflow-x: unset;
		overflow-y: scroll;
	}
	&.sliding {
		@include padding;
		cursor: grab;
		box-shadow: 
		-1rem 0 1rem -1.3rem inset rgba(0, 0, 0, .6),
		 1rem 0 1rem -1.3rem inset rgba(0, 0, 0, .6);
	}
	@media (min-width: 25em) {
		&::-webkit-scrollbar { 
			display: none; 
		}
	}
	& > * {
		min-width: 18vw;
		@media (max-width: $desktop) {
			min-width: 20em;
		}
		
		box-shadow: 0 0.2rem 0.3rem -0.1rem rgba(0,0,0,0.6);
		&:not(:last-of-type) {
			margin-right: 1rem;
		}
		@media (max-width: 40em)  {
			min-width: 60vw;
		}
		@media (max-width: 25em)  {
			min-width: 100%;
		}
		& > img {
			max-width: none;
		}
	} 
}


#filter {
	display: grid;
	padding: 1rem 0;
	grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
	grid-column-gap: .1em;
    grid-row-gap: .1em;
	button {
		grid-column: span 2;
		&:first-of-type, &:nth-of-type(2), &:nth-of-type(3), &:nth-of-type(4) {
			grid-column: span 3;
		}
		&.active {
			font-family: NexaXBold;
		}
		&:active, &:focus {
			text-decoration: none;
		}
		&:first-of-type {
			border-radius: $commonRadius 0 0 0;
		}
		&:nth-of-type(2) {
			border-radius: 0 $commonRadius 0 0;
		}
		&:last-of-type {
			border-radius: 0 0 $commonRadius 0;
		}
		&:not(.action) {
			&:after {
				content: '▼';
				margin-left: .3em;
				font-size: .7em;
			}
			&.inv {
				&:after {
					content: '▲';
				}
			}
		}
	}
	@media (max-width: 30em) {
		grid-gap: .6rem;
	}
	@media (max-width: $tablet) {
		grid-gap: .3rem;
		button:nth-of-type(5) {
			border-radius: 0 0 0 $commonRadius;
		}
	}
	@media (min-width: $tablet) {
		grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
		grid-template-rows: 1fr 1fr;
		button {
			grid-column: span 2;
			&:first-of-type, &:nth-of-type(2) {
				grid-column: span 6;
			}
			&:nth-of-type(3), &:nth-of-type(4) {
				grid-column: span 3;
			}
			&:nth-of-type(3) {
				border-radius: 0 0 0 $commonRadius;
			}
		}
	}
	@media (min-width: $desktop) {
		max-width: $desktop;
		margin: 0 auto;
	}
	button {
		padding: .6rem;
		border-radius: 0;
	}
}

.user #filter {
	button {
		&:nth-of-type(3) {
			grid-column: span 6;
		}
		&:nth-of-type(5) {
			grid-column: span 3;
		}
		&:nth-of-type(6) {
			border-radius: 0 0 0 $commonRadius;
		}
	}
	@media (min-width: $tablet) {
		button {
			&:nth-of-type(3), &:nth-of-type(4), &:nth-of-type(5) {
				grid-column: span 4;
			}
			&:nth-of-type(6) {
				grid-column: 7 / 9;
			}
		}
	}
}

#user, #info {
	padding: .3rem .4rem;
	font-size: 2em;
	display: flex;
	justify-content: center;
	span {
		font-size: .6em;
		margin-top: .2rem;
		margin-left: .8rem;
	}
}

#info {
	margin-right: .2em;
}

.story {
	@include radius;
	@include padding;
	padding-bottom: 0;
	background-color: rgba($blue, .05);
	box-shadow: 0 0 0.1rem -.1rem rgba($blue, 0.2);
	display: flex;
    flex-direction: column;
	justify-content: space-between;
	position: relative;
	transition: $trans;
	&:focus-within, &:hover {
		box-shadow: 0 0.3rem 0.3rem 0rem rgba($blue, 0.5);
	}
	&.fav {
		background-color: rgba($maincolor, .2);
		.fav {
			background-color: $pink;
			svg * {
				fill: $pink-darker;
			}
			&:hover {
				background-color: $pink-light;
			}
		}
	}
	h3 {
		margin-top: 0;
		color: $blue;
		min-height: 2.4em;
		margin-left: 0;
		padding-right: 1.4em;
		& + div {
			display: flex;
			justify-content: flex-end;
			& > * {
				margin-left: 1em;
			}
			p {
				color: darken($blue, 10);
			}
			svg * {
				fill: darken($blue, 10);
			}
		}
	}
	div:first-of-type {
		display: flex;
		flex-direction: row-reverse;
		justify-content: flex-end;
		p:nth-of-type(2) {
			margin-right: .6em;
		}
	}
	.row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		margin: 0 -1rem -.75rem;
		@media (min-width: $tablet) {
			margin: 0 -1.5rem -1.25rem;
		}
		@media (min-width: $desktop) {
			margin: 0 -2rem -1.75rem;
		}
		button {
			display: flex;
			justify-content: space-around;
			align-items: center;
			border-radius: 0;
			&:first-of-type {
				border-radius: 0 0 0 $commonRadius;
			}
			&:last-of-type {
				border-radius: 0 0 $commonRadius 0;
			}
			span {
				margin-left: -2rem;
			}
		}
	}
	.season {
		position: absolute;
		top: 0;
		right: 1em;
		opacity: .5;
		svg * {
			fill: $blue;
		}
		span {
			display: none;
		}
	}
	a {
		&:focus {
			outline: none;
		}
	}
}

button.fav.active {
	background-color: $pink;
	svg * {
		fill: $pink-darker;
	}
	&:hover {
		background-color: $pink-light;
	}
}

#recommended {
	section {
		animation: fadeInUp 1s; // TODO: Enhance w/ JS
	}
}

#single {
	& > div:first-of-type {
		position: fixed;
		top: 4.5rem;
		display: flex;
		justify-content: space-between;
		width: 100%;
		align-items: center;
		& > div:last-of-type {
			display: flex;
		}
		p {
			margin: 0;
		}
	}
	section {
		@include padding;
		background-color: rgba(255, 255, 255, .9);
	}
	h1, h1 + div {
		max-width: 50rem;
		margin: 0 auto;
	}
	h1 {
		margin-top: 1.4rem;
	}
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
}

@keyframes fadeInDelay {
	0%, 65% {
		opacity: 0;
	}
}

@keyframes fadeInUp {
	from {
		opacity: 0;
		transform: translate3d(0, 100%, 0);
	}

	to {
		opacity: 1;
		transform: translate3d(0, 0, 0);
	}
}
